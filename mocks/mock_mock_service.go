// Code generated by MockGen. DO NOT EDIT.
// Source: gostudy_treemakerli/mock_study (interfaces: MockService)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMockService is a mock of MockService interface.
type MockMockService struct {
	ctrl     *gomock.Controller
	recorder *MockMockServiceMockRecorder
}

// MockMockServiceMockRecorder is the mock recorder for MockMockService.
type MockMockServiceMockRecorder struct {
	mock *MockMockService
}

// NewMockMockService creates a new mock instance.
func NewMockMockService(ctrl *gomock.Controller) *MockMockService {
	mock := &MockMockService{ctrl: ctrl}
	mock.recorder = &MockMockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMockService) EXPECT() *MockMockServiceMockRecorder {
	return m.recorder
}

// MethodOne mocks base method.
func (m *MockMockService) MethodOne(arg0 int) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MethodOne", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// MethodOne indicates an expected call of MethodOne.
func (mr *MockMockServiceMockRecorder) MethodOne(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MethodOne", reflect.TypeOf((*MockMockService)(nil).MethodOne), arg0)
}
